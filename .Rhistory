install.packages("rstan")
# Chunk 1: setup
knitr::opts_chunk$set(echo = T, warning = F, message = F)
library("tidyverse")
library("rstan") # observe startup messages
library("shinystan")
library("bayesplot")
library("matrixStats")
library("gridExtra")
library("mosaic")
options(mc.cores = parallel::detectCores()) #want to run the chains in parallel
rstan_options(auto_write = TRUE) #write a complied version to the disk
# Chunk 2
data <- read.csv(file = "vegf.csv")
data <- mutate(data,diseaseNum = as.numeric(factor(disease))-1,sexNum = as.numeric(factor(sex))-1)
# Female= 0, Male= 1; Diseased: No = 0,Yes = 1
# Chunk 3
grid.arrange(grobs = list(
ggplot(data = data)+
geom_boxplot(mapping = aes(x=disease,y=totalinj))+ggtitle("Figure 1")+xlab("Glaucoma")+ylab("Total Injections"), # Main Plot!
ggplot(data=data)+
geom_bar(mapping = aes(x=disease))+facet_wrap(data$sex)+ggtitle("Figure 2") + xlab("Developed Glaucoma"),
ggplot(data=data)+
geom_jitter(mapping=aes(x=ageatfirstinj,y=totalinj,color=disease))+ggtitle("Figure 3") + xlab("Age at First Injection") + ylab("Total Injections"),
ggplot(data=data)+
geom_jitter(mapping=aes(x=ageatfirstinj,y=totalinj,color=sex))+ggtitle("Figure 4") + xlab("Age at First Injection") + ylab("Total Injections")))
# Chunk 4
disease.data <- list(N = nrow(data), y = data$diseaseNum, x1 = data$sexNum,x2=data$totalinj, x3=data$ageatfirstinj)
fit.priorck <- stan(file = 'GlaucomaPrior.stan', data = disease.data, seed = 13)
save(fit.priorck,file="prior.Rdata")
load("prior.Rdata")
yfake <- as.data.frame(fit.priorck) %>% select(contains("y_fake"))
# ppc_bars(y = data$diseaseNum, yrep = as.matrix(yfake))
ppc_stat_grouped(y = data$diseaseNum, yrep = as.matrix(yfake),group = data$sex)
# Chunk 5
fit <- stan(file = 'Glaucoma.stan', data = disease.data, seed = 13)
save(fit,file = "fit.Rdata")
load("fit.Rdata")
# launch_shinystan(as.shinystan(fit))
# Chunk 6
load("fit.Rdata")
yrep.subset <- as.data.frame(fit) %>% select(contains("y_rep"))
ppc_bars(y = data$diseaseNum, yrep = as.matrix(yrep.subset))
ppc_stat_grouped(y = data$diseaseNum, yrep = as.matrix(yrep.subset),group = data$sex)
# Chunk 7
beta0 = -1.526
beta1 = 1.005
beta2 = 0.061
beta3 = -0.036
age = 80
injections = 1:50
Sex = list("Male","Female")
ggplot()+
geom_line(mapping = aes(x=injections,y=1/(1+exp(-(beta0+beta1+beta2*injections + beta3*age))),color = Sex[[1]]))+
geom_line(mapping = aes(x=injections,y=1/(1+exp(-(beta0+beta2*injections + beta3*age))),color = Sex[[2]])) +xlab("Injections")+ylab("P(Disease)")+ylim(0,1) + ggtitle("Predicted Probability")
install.packages("shinystan")
knitr::opts_chunk$set(echo = T, warning = F, message = F)
library("tidyverse")
library("rstan") # observe startup messages
library("shinystan")
library("bayesplot")
library("matrixStats")
library("gridExtra")
library("mosaic")
options(mc.cores = parallel::detectCores()) #want to run the chains in parallel
rstan_options(auto_write = TRUE) #write a complied version to the disk
knitr::opts_chunk$set(echo = T, warning = F, message = F)
library("tidyverse")
library("rstan") # observe startup messages
library("shinystan")
library("bayesplot")
library("matrixStats")
library("gridExtra")
library("mosaic")
options(mc.cores = parallel::detectCores()) #want to run the chains in parallel
rstan_options(auto_write = TRUE) #write a complied version to the disk
install.packages("mosaic")
knitr::opts_chunk$set(echo = T, warning = F, message = F)
library("tidyverse")
library("rstan") # observe startup messages
library("shinystan")
library("bayesplot")
library("matrixStats")
library("gridExtra")
library("mosaic")
options(mc.cores = parallel::detectCores()) #want to run the chains in parallel
rstan_options(auto_write = TRUE) #write a complied version to the disk
install.packages("zoo")
knitr::opts_chunk$set(echo = T, warning = F, message = F)
library("tidyverse")
library("rstan") # observe startup messages
library("shinystan")
library("bayesplot")
library("matrixStats")
library("gridExtra")
library("mosaic")
options(mc.cores = parallel::detectCores()) #want to run the chains in parallel
rstan_options(auto_write = TRUE) #write a complied version to the disk
knitr::opts_chunk$set(echo = T, warning = F, message = F)
library("tidyverse")
library("rstan") # observe startup messages
library("shinystan")
library("bayesplot")
library("matrixStats")
library("gridExtra")
library("mosaic")
options(mc.cores = parallel::detectCores()) #want to run the chains in parallel
rstan_options(auto_write = TRUE) #write a complied version to the disk
knitr::opts_chunk$set(echo = T, warning = F, message = F)
library("tidyverse")
library("zoo")
library("rstan") # observe startup messages
library("shinystan")
library("bayesplot")
library("matrixStats")
library("gridExtra")
library("mosaic")
options(mc.cores = parallel::detectCores()) #want to run the chains in parallel
rstan_options(auto_write = TRUE) #write a complied version to the disk
knitr::opts_chunk$set(echo = T, warning = F, message = F)
library("tidyverse")
library("zoo")
library("rstan") # observe startup messages
library("shinystan")
library("bayesplot")
library("matrixStats")
library("gridExtra")
library("mosaic")
options(mc.cores = parallel::detectCores()) #want to run the chains in parallel
rstan_options(auto_write = TRUE) #write a complied version to the disk
install.packages("zoo")
install.packages("zoo")
install.packages("zoo")
install.packages("rmarkdown")
knitr::opts_chunk$set(echo = T, warning = F, message = F)
library("tidyverse")
library("rstan") # observe startup messages
library("shinystan")
library("bayesplot")
library("matrixStats")
library("gridExtra")
library("mosaic")
options(mc.cores = parallel::detectCores()) #want to run the chains in parallel
rstan_options(auto_write = TRUE) #write a complied version to the disk
install.packages("zoo")
install.packages("zoo")
knitr::opts_chunk$set(echo = T, warning = F, message = F)
library("tidyverse")
library("rstan") # observe startup messages
library("shinystan")
library("bayesplot")
library("matrixStats")
library("gridExtra")
library("mosaic")
options(mc.cores = parallel::detectCores()) #want to run the chains in parallel
rstan_options(auto_write = TRUE) #write a complied version to the disk
install.packages("shinystan")
install.packages("rstan")
install.packages("rstan")
install.packages("rstan")
install.packages("rstan")
installed.packages()
install.packages("shinystan")
install.packages("rstan")
install.packages("stanheaders")
install.packages("StanHeaders")
